class Particle {
  PVector pos;
  float life;
  int c;
  float ff;

  Particle(float x, float y, int c0) {
    pos = new PVector(x, y);
    life = random(1);
    c = c0;
    ff = 0;
  }


  void update() {
    ff = noise(pos.x/120, pos.y/120) * TWO_PI;
    float mainP = 1200;
    float changeDir = TWO_PI / mainP;
    float roundff = round((ff / TWO_PI) * mainP);
    ff = changeDir * roundff;

    println(ff, tan(ff), sin(ff), cos(ff));
    if (ff>TWO_PI*7/8) {
      println(ff, changeDir, roundff);
    }
    if (ff < 6 && ff > 3) {
      c = colors[0];
      stroke(c);
      pos.add(tan(ff)*random(1, 3), tan(ff));
    } else {
      c = colors[1];
      stroke(c);
      println(ff);
      pos.sub(sin(ff)*random(0.1, 1), cos(ff));
    }
  };

  void show() {
    noFill();
    strokeWeight(random(1.25));
    float lx = 20;
    float ly = 20;
    float px = constrain(pos.x, lx, width - lx);
    float py = constrain(pos.y, ly, height - ly);
    point(px, py);
  };

  boolean finished() {
    life -= random(random(random(random(1)))) / 10;
    life = constrain(life, 0, 1);
    if (life == 0) {
      return true;
    } else {
      return false;
    }
  }
}
